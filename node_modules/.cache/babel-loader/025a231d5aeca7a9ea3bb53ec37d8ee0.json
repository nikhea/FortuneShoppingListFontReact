{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n  return [{\n    id: 1,\n    title: \"No Srubs\",\n    duratration: \"4:50s\"\n  }, {\n    id: 2,\n    title: \"No fortune\",\n    duratration: \"3:50s\"\n  }, {\n    id: 3,\n    title: \"No yes\",\n    duratration: \"2:50s\"\n  }, {\n    id: 4,\n    title: \"No ok\",\n    duratration: \"1:50s\"\n  }];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});","map":{"version":3,"sources":["/home/fortune/project/songs redux/src/reducers/index.js"],"names":["combineReducers","songsReducer","id","title","duratration","selectedSongReducer","selectedSong","action","type","payload","songs"],"mappings":"AACA,SAAQA,eAAR,QAA8B,OAA9B;;AAEA,MAAMC,YAAY,GAAG,MAAK;AACtB,SAAM,CACA;AAACC,IAAAA,EAAE,EAAC,CAAJ;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADA,EAIA;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIC,IAAAA,WAAW,EAAE;AAHjB,GAJA,EAQA;AACIF,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,KAAK,EAAE,QAFX;AAGIC,IAAAA,WAAW,EAAE;AAHjB,GARA,EAYA;AAAEF,IAAAA,EAAE,EAAE,CAAN;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,WAAW,EAAE;AAFf,GAZA,CAAN;AAkBH,CAnBD;;AAsBA,MAAMC,mBAAmB,GAAG,CAACC,YAAY,GAAG,IAAhB,EAAsBC,MAAtB,KAAiC;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACjC,WAAOD,MAAM,CAACE,OAAd;AACH;;AAED,SAAOH,YAAP;AACH,CAND;;AASA,eAAeN,eAAe,CAAC;AAC3BU,EAAAA,KAAK,EAAET,YADoB;AAE3BK,EAAAA,YAAY,EAAED;AAFa,CAAD,CAA9B","sourcesContent":["\nimport {combineReducers} from 'redux';\n\nconst songsReducer = () =>{\n    return[\n          {id:1,\n            title: \"No Srubs\", \n            duratration: \"4:50s\"},\n          {\n              id: 2,\n              title: \"No fortune\", \n              duratration: \"3:50s\"},\n          {\n              id:3,\n              title: \"No yes\", \n              duratration: \"2:50s\"},\n          { id: 4,\n            title: \"No ok\", \n            duratration: \"1:50s\"}\n    ]\n      \n    \n}\n\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n    if (action.type === 'SONG_SELECTED') {\n        return action.payload;\n    }\n        \n    return selectedSong;\n}\n\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer\n})"]},"metadata":{},"sourceType":"module"}