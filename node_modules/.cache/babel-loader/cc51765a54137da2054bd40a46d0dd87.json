{"ast":null,"code":"var _jsxFileName = \"/home/fortune/project/fortune redux/src/containers/Book-List.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux';\nimport { selectBook } from '../actions/index';\nimport { bindActionCreators } from 'redux';\n\nclass BookList extends Component {\n  renderList() {\n    return this.props.books.map(book => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => this.props.selectBook(book),\n        key: book.title,\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, book.title));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nfunction mapSateToProps(state) {\n  //whatever is retured will show up as props\n  //inside of Booklist\n  return {\n    books: state.books\n  };\n} //anything returend from this function will end up as props\n//on Booklist container\n\n\nfunction mapDispatchToProps(dispatch) {\n  //whenever selestbook is called the result should be passed\n  //to all of our reducers\n  return bindActionCreators({\n    selectBook: selectBook\n  }, dispatch);\n} //promote Booklist from a component to a conatiner -- it needs to konw\n//about the new dispatch method, selectBook.make it availble\n//as a prop\n\n\nexport default connect(mapSateToProps, mapDispatchToProps)(BookList);","map":{"version":3,"sources":["/home/fortune/project/fortune redux/src/containers/Book-List.js"],"names":["React","Component","connect","selectBook","bindActionCreators","BookList","renderList","props","books","map","book","title","render","mapSateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,sCAAP;AAEA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAAQC,UAAR,QAAwB,kBAAxB;AACA,SAAWC,kBAAX,QAAqC,OAArC;;AAGA,MAAMC,QAAN,SAAwBJ,SAAxB,CAAkC;AAC5BK,EAAAA,UAAU,GAAE;AACZ,WAAU,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAS;AACpC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,OAAO,EAAG,MAAM,KAAKH,KAAL,CAAWJ,UAAX,CAAsBO,IAAtB,CADhB;AAEA,QAAA,GAAG,EAAEA,IAAI,CAACC,KAFV;AAGC,QAAA,SAAS,EAAC,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIED,IAAI,CAACC,KAJP,CADJ,CADJ;AASH,KAVS,CAAV;AAWD;;AACDC,EAAAA,MAAM,GAAE;AAIJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,UAAL,EADH,CADF,CADJ;AAOH;;AAzB6B;;AA2BlC,SAASO,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B;AACA;AACA,SAAM;AACNN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADP,GAAN;AAGH,C,CACD;AACA;;;AACA,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;AAElC;AACA;AACA,SAAOZ,kBAAkB,CAAC;AAACD,IAAAA,UAAU,EAAEA;AAAb,GAAD,EAA2Ba,QAA3B,CAAzB;AAEH,C,CAED;AACA;AACA;;;AACA,eAAed,OAAO,CAACW,cAAD,EAAiBE,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {connect } from 'react-redux';\nimport{ selectBook} from'../actions/index'\nimport    {bindActionCreators}  from 'redux'\n\n\nclass BookList extends  Component {\n      renderList(){\n      return    this.props.books.map((book) =>{\n          return(\n              <div>\n                  <li\n                  onClick ={() => this.props.selectBook(book)} \n                  key={book.title} \n                   className=\"list-group-item\" >\n                   {book.title}</li>\n              </div>\n          )\n      })\n    }\n    render(){\n        \n\n\n        return(\n            <div>\n              <ul className='list-group col-sm-4'>\n                {this.renderList()}\n               </ul>\n            </div>\n        )\n    }\n}\nfunction mapSateToProps(state) {\n    //whatever is retured will show up as props\n    //inside of Booklist\n    return{\n    books: state.books\n    }\n} \n//anything returend from this function will end up as props\n//on Booklist container\nfunction mapDispatchToProps(dispatch) {\n\n    //whenever selestbook is called the result should be passed\n    //to all of our reducers\n    return bindActionCreators({selectBook: selectBook}, dispatch)\n    \n}\n\n//promote Booklist from a component to a conatiner -- it needs to konw\n//about the new dispatch method, selectBook.make it availble\n//as a prop\nexport default connect(mapSateToProps, mapDispatchToProps)(BookList) "]},"metadata":{},"sourceType":"module"}