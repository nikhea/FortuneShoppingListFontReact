{"ast":null,"code":"var _jsxFileName = \"/home/fortune/MAIN PROJECTS/SHOPPINGLIST/Client/src/components/Items/itemsList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getItem } from '../../actions/ItemsActions';\nimport Spinner from '../../utils/Spinner';\nimport ItemsItem from './ItemItems';\n\nclass ItemsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.categorie._id\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.state.id)\n    this.props.getItem(this.state.id);\n    this.props.items.isLoading = false; // console.log(this.props)\n  }\n\n  render() {\n    const _this$props$items = this.props.items,\n          items = _this$props$items.items.items,\n          isLoading = _this$props$items.isLoading;\n    console.log(items, isLoading);\n\n    if (typeof items == 'undefined') {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ItemsItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }); // return items.map((item) => <ItemsItem key={item._id} item={item} />);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.ItemReducer,\n    categorie: state.categorieReducer.categorie.Categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItem\n})(ItemsList);","map":{"version":3,"sources":["/home/fortune/MAIN PROJECTS/SHOPPINGLIST/Client/src/components/Items/itemsList.js"],"names":["React","Component","connect","getItem","Spinner","ItemsItem","ItemsList","state","id","props","categorie","_id","componentDidMount","items","isLoading","render","console","log","mapStateToProps","ItemReducer","categorieReducer","Categories"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACPC,MAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,SAAX,CAAqBC;AADlB,KADyB;AAAA;;AAKjCC,EAAAA,iBAAiB,GAAG;AACnB;AACA,SAAKH,KAAL,CAAWN,OAAX,CAAmB,KAAKI,KAAL,CAAWC,EAA9B;AACA,SAAKC,KAAL,CAAWI,KAAX,CAAiBC,SAAjB,GAA6B,KAA7B,CAHmB,CAInB;AACA;;AAEDC,EAAAA,MAAM,GAAG;AAAA,8BAEgC,KAAKN,KAAL,CAAWI,KAF3C;AAAA,UAESA,KAFT,qBAEAA,KAFA,CAESA,KAFT;AAAA,UAEkBC,SAFlB,qBAEkBA,SAFlB;AAGRE,IAAAA,OAAO,CAACC,GAAR,CAAaJ,KAAb,EAAoBC,SAApB;;AACA,QAAI,OAAOD,KAAP,IAAgB,WAApB,EAAiC;AAChC,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KAFD,MAEO;AACN,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADM,CAEN;AACA;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAxBgC;;AA2BlC,MAAMK,eAAe,GAAIX,KAAD,IAAW;AAClC,SAAO;AACNM,IAAAA,KAAK,EAAEN,KAAK,CAACY,WADP;AAENT,IAAAA,SAAS,EAAEH,KAAK,CAACa,gBAAN,CAAuBV,SAAvB,CAAiCW;AAFtC,GAAP;AAIA,CALD;;AAMA,eAAenB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,SAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getItem } from '../../actions/ItemsActions';\nimport Spinner from '../../utils/Spinner';\nimport ItemsItem from './ItemItems';\n\nclass ItemsList extends Component {\n\tstate = {\n\t\tid: this.props.categorie._id\n\t};\n\n\tcomponentDidMount() {\n\t\t// console.log(this.state.id)\n\t\tthis.props.getItem(this.state.id);\n\t\tthis.props.items.isLoading = false\n\t\t// console.log(this.props)\n\t}\n\n\trender() {\n\t\t\n\t\tconst { items: { items }, isLoading } = this.props.items;\n\t\tconsole.log( items, isLoading)\n\t\tif (typeof items == 'undefined') {\n\t\t\treturn <Spinner />;\n\t\t} else {\n\t\t\treturn <ItemsItem/>\n\t\t\t// return items.map((item) => <ItemsItem key={item._id} item={item} />);\n\t\t}\n\n\t\treturn <div />;\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\titems: state.ItemReducer,\n\t\tcategorie: state.categorieReducer.categorie.Categories\n\t};\n};\nexport default connect(mapStateToProps, { getItem })(ItemsList);\n"]},"metadata":{},"sourceType":"module"}